<?php

namespace PP\NotificationBundle\Entity;

/**
 * NotificationThreadRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationThreadRepository extends \Doctrine\ORM\EntityRepository
{
    
    
    public function getNotifications($userId, $limit, $page){
        
        $qb = $this->createQueryBuilder('nt')
                        ->distinct(true)   
                        ->leftJoin('nt.user', 'u')                        
                        ->where('u.id = :userId')
                        ->setParameter('userId', $userId)                        
                
                        ->leftJoin('nt.notificationsFollow', 'nf')
                        ->addSelect('nf')
                        ->leftJoin('nf.followYou', 'fy')
                        ->addSelect('fy')
                        ->leftJoin('fy.profilImage', 'fyPI')
                        ->addSelect('fyPI')
                        
                        ->leftJoin('nt.notificationsNewProposition', 'nNP')
                        ->addSelect('nNP')
                        ->leftJoin('nNP.proposition', 'nNPProp')
                        ->addSelect('nNPProp')
                        ->leftJoin('nNPProp.author', 'nNPPropAuth')
                        ->addSelect('nNPPropAuth')
                        ->leftJoin('nNPPropAuth.profilImage', 'nNPPropAuthPI')
                        ->addSelect('nNPPropAuthPI')
                        
                        ->orderBy('nf.createDate + nNP.createDate', 'DESC')                                                                 
                        ->setFirstResult(($page-1) * $limit)
                        ->setMaxResults($limit);
        
         try{
               return  $qb
                           ->getQuery()
                           ->getSingleResult();
        }catch(\Doctrine\ORM\NoResultException $e){
               return null;
        }
    }
    
    public function getNotificationsNotViewed($userId){
        
        $qb = $this->createQueryBuilder('nt')
                        ->distinct(true)   
                        ->leftJoin('nt.user', 'u')                                                   
                
                        ->leftJoin('nt.notificationsFollow', 'nf')
                        ->addSelect('nf')
                        
                        ->leftJoin('nt.notificationsNewProposition', 'nNP')
                        ->addSelect('nNP')
                
                        ->where('u.id = :userId AND nf.isViewed = false OR nNP.isViewed = false')
                        ->setParameter('userId', $userId)
        ;

        
        try{
               return  $qb
                           ->getQuery()
                           ->getSingleResult();
        }catch(\Doctrine\ORM\NoResultException $e){
               return null;
        }
                
    }
    
}
