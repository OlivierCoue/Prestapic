<?php

namespace PP\PropositionBundle\Entity;

/**
 * PropositionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PropositionRepository extends \Doctrine\ORM\EntityRepository
{
    public function countPropositions($id){
        
            $qb = $this
                    ->createQueryBuilder('p')
                    ->select('COUNT(p.id)')
                    ->where('p.imageRequest = :id')
                    ->setParameter('id', $id)
            ;                        
            
            return  $qb
                    ->getQuery()
                    ->getSingleScalarResult();                                                    
    }
    
    public function getPropositions($imageRequestId, $limit, $page)
    {
      $qb = $this
            ->createQueryBuilder('p')
            ->leftJoin('p.image', 'i')
            ->addSelect('i')
            ->leftJoin('p.author', 'pA')
            ->addSelect('pA')
            ->where('p.imageRequest = :imageRequestId')
            ->setParameter('imageRequestId', $imageRequestId)
            ->orderBy('p.createdDate', 'DESC')
            ->distinct(true)
            
      ;
      
      $qb = $qb
            ->setFirstResult(($page-1) * $limit)
            ->setMaxResults($limit)
      ;      

      return $qb
            ->getQuery()
            ->getResult()
      ;
    }
    
    public function countOneUserPropositions($userId){
        $qb = $this->createQueryBuilder('p')
                ->select('COUNT(p.id)')
                ->where('p.author = :userId')
                ->setParameter('userId', $userId);
         return  $qb
                    ->getQuery()
                    ->getSingleScalarResult();
    }
    
    public function getOneUserPropositions($userId, $limit){
        $qb = $this->createQueryBuilder('p')
                ->where('p.author = :userId')
                ->setParameter('userId', $userId)
                ->leftJoin('p.image','i')
                ->addSelect('i')
                ->leftJoin('p.imageRequest', 'ir')
                ->addSelect('ir')
                ->orderBy('p.createdDate', 'DESC')
                ->setMaxResults($limit);
        
        return $qb
            ->getQuery()
            ->getResult()
        ;
    }
    
}
